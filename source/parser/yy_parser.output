Terminals unused in grammar

   TOKEN_TYPE_STRING


State 71 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 81 conflicts: 8 shift/reduce
State 82 conflicts: 3 shift/reduce
State 119 conflicts: 2 shift/reduce
State 166 conflicts: 1 shift/reduce
State 168 conflicts: 3 shift/reduce
State 169 conflicts: 3 shift/reduce
State 170 conflicts: 2 shift/reduce


Grammar

    0 $accept: module $end

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope

    3 module_create_scope: TOKEN_TYPE_IDENTIFIER

    4 module_remove_scope: TOKEN_TYPE_IDENTIFIER

    5 declarations: constdecl vardecl procdecl_list
    6             | constdecl procdecl_list
    7             | vardecl procdecl_list
    8             | procdecl_list

    9 constdecl: TOKEN_TYPE_CONST constdecl_list

   10 constdecl_list: constdecl_list constlist TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   11               | %empty

   12 constlist: constlist TOKEN_TYPE_COMMA const_addinfo TOKEN_TYPE_ASSIGN expression
   13          | const_addinfo TOKEN_TYPE_ASSIGN expression

   14 const_addinfo: TOKEN_TYPE_IDENTIFIER

   15 vardecl: TOKEN_TYPE_VAR vardecl_list

   16 vardecl_list: vardecl_list varlist TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   17             | %empty

   18 varlist: varlist TOKEN_TYPE_COMMA var_addinfo
   19        | var_addinfo

   20 var_addinfo: TOKEN_TYPE_IDENTIFIER

   21 datatype: TOKEN_TYPE_BOOLEAN
   22         | TOKEN_TYPE_INTEGER

   23 procdecl_list: procdecl_list procdecl
   24              | %empty

   25 procdecl: procheader procbody

   26 procheader: TOKEN_TYPE_PROCEDURE procheader_create_scope formalpars TOKEN_TYPE_SEMICOLON
   27           | TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   28           | TOKEN_TYPE_PROCEDURE procheader_create_scope formalpars
   29           | TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_COLON datatype
   30           | TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_SEMICOLON

   31 procheader_create_scope: TOKEN_TYPE_IDENTIFIER

   32 funcheader_create_scope: TOKEN_TYPE_IDENTIFIER

   33 procbody: vardecl TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON
   34         | TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON
   35         | TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope

   36 procbody_remove_scope: TOKEN_TYPE_IDENTIFIER

   37 formalpars: TOKEN_TYPE_LEFT_BRACKET fpardecl_opt_list TOKEN_TYPE_RIGHT_BRACKET

   38 fpardecl_opt_list: fpardecl_list
   39                  | %empty

   40 fpardecl_list: fpardecl_list TOKEN_TYPE_SEMICOLON fparlist TOKEN_TYPE_COLON datatype
   41              | fparlist TOKEN_TYPE_COLON datatype

   42 fparlist: fparlist TOKEN_TYPE_COMMA fpar_addinfo
   43         | fpar_addinfo

   44 fpar_addinfo: TOKEN_TYPE_IDENTIFIER

   45 statements: statements statement TOKEN_TYPE_SEMICOLON
   46           | %empty
   47           | statements statement

   48 expression: expression TOKEN_TYPE_OR andexp
   49           | andexp

   50 andexp: andexp TOKEN_TYPE_AND relexp
   51       | relexp

   52 relexp: aritexp rel_op aritexp
   53       | aritexp

   54 rel_op: TOKEN_TYPE_GREATER
   55       | TOKEN_TYPE_LESS
   56       | TOKEN_TYPE_GREATER_EQUAL
   57       | TOKEN_TYPE_LESS_EQUAL
   58       | TOKEN_TYPE_EQUAL
   59       | TOKEN_TYPE_NOT_EQUAL

   60 aritexp: aritexp TOKEN_TYPE_PLUS term
   61        | aritexp TOKEN_TYPE_MINUS term
   62        | term

   63 term: term TOKEN_TYPE_ASTERISK factor
   64     | term TOKEN_TYPE_SLASH factor
   65     | term TOKEN_TYPE_MOD factor
   66     | factor

   67 factor: TOKEN_TYPE_PLUS primary
   68       | TOKEN_TYPE_MINUS primary
   69       | TOKEN_TYPE_NOT primary
   70       | primary

   71 primary: TOKEN_TYPE_LEFT_BRACKET expression TOKEN_TYPE_RIGHT_BRACKET
   72        | funccall
   73        | literal
   74        | checkIdentifier
   75        | TOKEN_TYPE_LEFT_BRACKET expression

   76 checkIdentifier: TOKEN_TYPE_IDENTIFIER

   77 literal: TOKEN_TYPE_BOOLEAN_LITERAL
   78        | TOKEN_TYPE_INTEGER_LITERAL

   79 funccall: TOKEN_TYPE_IDENTIFIER actualpar

   80 proccall: TOKEN_TYPE_IDENTIFIER actualpar

   81 actualpar: TOKEN_TYPE_LEFT_BRACKET parameters_list TOKEN_TYPE_RIGHT_BRACKET
   82          | TOKEN_TYPE_LEFT_BRACKET TOKEN_TYPE_RIGHT_BRACKET

   83 parameters_list: parameters_list TOKEN_TYPE_COMMA parameter
   84                | parameter

   85 parameter: expression

   86 statement: assignment
   87          | conditional
   88          | repetition
   89          | proccall
   90          | io_statement
   91          | TOKEN_TYPE_CONTINUE
   92          | TOKEN_TYPE_BREAK
   93          | TOKEN_TYPE_RETURN expression

   94 assignment: checkIdentifier TOKEN_TYPE_ASSIGN expression

   95 conditional: TOKEN_TYPE_IF expression TOKEN_TYPE_THEN statements elseif_opt_list TOKEN_TYPE_END
   96            | TOKEN_TYPE_IF expression statements elseif_opt_list TOKEN_TYPE_END

   97 elseif_opt_list: TOKEN_TYPE_ELSIF expression TOKEN_TYPE_THEN statements elseif_opt_list
   98                | TOKEN_TYPE_ELSE statements
   99                | %empty
  100                | TOKEN_TYPE_ELSIF expression statements elseif_opt_list

  101 repetition: TOKEN_TYPE_WHILE expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  102           | TOKEN_TYPE_REPEAT statements TOKEN_TYPE_UNTIL expression
  103           | TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  104           | TOKEN_TYPE_WHILE expression statements TOKEN_TYPE_END
  105           | TOKEN_TYPE_FOR assignment expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  106           | TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression statements TOKEN_TYPE_END

  107 io_statement: TOKEN_TYPE_WRITE TOKEN_TYPE_LEFT_BRACKET io_parameter TOKEN_TYPE_RIGHT_BRACKET
  108             | TOKEN_TYPE_WRITELN
  109             | TOKEN_TYPE_WRITELN TOKEN_TYPE_LEFT_BRACKET TOKEN_TYPE_RIGHT_BRACKET
  110             | TOKEN_TYPE_WRITELN TOKEN_TYPE_LEFT_BRACKET io_parameter TOKEN_TYPE_RIGHT_BRACKET
  111             | TOKEN_TYPE_READ TOKEN_TYPE_LEFT_BRACKET checkIdentifier TOKEN_TYPE_RIGHT_BRACKET

  112 io_parameter: parameter
  113             | TOKEN_TYPE_STRING_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_TYPE_IDENTIFIER (258) 3 4 14 20 31 32 36 44 76 79 80
TOKEN_TYPE_BOOLEAN (259) 21
TOKEN_TYPE_INTEGER (260) 22
TOKEN_TYPE_STRING (261)
TOKEN_TYPE_BOOLEAN_LITERAL (262) 77
TOKEN_TYPE_INTEGER_LITERAL (263) 78
TOKEN_TYPE_STRING_LITERAL (264) 113
TOKEN_TYPE_MODULE (265) 1 2
TOKEN_TYPE_PROCEDURE (266) 26 28
TOKEN_TYPE_FUNCTION (267) 27 29 30
TOKEN_TYPE_CONST (268) 9
TOKEN_TYPE_VAR (269) 15
TOKEN_TYPE_BEGIN (270) 1 2 33 34 35
TOKEN_TYPE_END (271) 1 2 33 34 35 95 96 101 103 104 105 106
TOKEN_TYPE_IF (272) 95 96
TOKEN_TYPE_THEN (273) 95 97
TOKEN_TYPE_ELSIF (274) 97 100
TOKEN_TYPE_ELSE (275) 98
TOKEN_TYPE_WHILE (276) 101 104
TOKEN_TYPE_REPEAT (277) 102
TOKEN_TYPE_UNTIL (278) 102
TOKEN_TYPE_FOR (279) 103 105 106
TOKEN_TYPE_CONTINUE (280) 91
TOKEN_TYPE_BREAK (281) 92
TOKEN_TYPE_RETURN (282) 93
TOKEN_TYPE_DO (283) 101 103 105
TOKEN_TYPE_TO (284) 103 106
TOKEN_TYPE_AND (285) 50
TOKEN_TYPE_OR (286) 48
TOKEN_TYPE_NOT (287) 69
TOKEN_TYPE_WRITE (288) 107
TOKEN_TYPE_WRITELN (289) 108 109 110
TOKEN_TYPE_READ (290) 111
TOKEN_TYPE_LESS (291) 55
TOKEN_TYPE_LESS_EQUAL (292) 57
TOKEN_TYPE_EQUAL (293) 58
TOKEN_TYPE_NOT_EQUAL (294) 59
TOKEN_TYPE_GREATER (295) 54
TOKEN_TYPE_GREATER_EQUAL (296) 56
TOKEN_TYPE_COLON (297) 10 16 27 29 40 41
TOKEN_TYPE_SEMICOLON (298) 1 2 10 16 26 27 30 33 34 40 45
TOKEN_TYPE_FULL_STOP (299) 1
TOKEN_TYPE_COMMA (300) 12 18 42 83
TOKEN_TYPE_LEFT_BRACKET (301) 37 71 75 81 82 107 109 110 111
TOKEN_TYPE_RIGHT_BRACKET (302) 37 71 81 82 107 109 110 111
TOKEN_TYPE_ASSIGN (303) 12 13 94
TOKEN_TYPE_PLUS (304) 60 67
TOKEN_TYPE_MINUS (305) 61 68
TOKEN_TYPE_ASTERISK (306) 63
TOKEN_TYPE_MOD (307) 65
TOKEN_TYPE_SLASH (308) 64


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
module (55)
    on left: 1 2, on right: 0
module_create_scope (56)
    on left: 3, on right: 1 2
module_remove_scope (57)
    on left: 4, on right: 1 2
declarations (58)
    on left: 5 6 7 8, on right: 1 2
constdecl (59)
    on left: 9, on right: 5 6
constdecl_list (60)
    on left: 10 11, on right: 9 10
constlist (61)
    on left: 12 13, on right: 10 12
const_addinfo (62)
    on left: 14, on right: 12 13
vardecl (63)
    on left: 15, on right: 5 7 33
vardecl_list (64)
    on left: 16 17, on right: 15 16
varlist (65)
    on left: 18 19, on right: 16 18
var_addinfo (66)
    on left: 20, on right: 18 19
datatype (67)
    on left: 21 22, on right: 10 16 27 29 40 41
procdecl_list (68)
    on left: 23 24, on right: 5 6 7 8 23
procdecl (69)
    on left: 25, on right: 23
procheader (70)
    on left: 26 27 28 29 30, on right: 25
procheader_create_scope (71)
    on left: 31, on right: 26 28
funcheader_create_scope (72)
    on left: 32, on right: 27 29 30
procbody (73)
    on left: 33 34 35, on right: 25
procbody_remove_scope (74)
    on left: 36, on right: 33 34 35
formalpars (75)
    on left: 37, on right: 26 27 28 29 30
fpardecl_opt_list (76)
    on left: 38 39, on right: 37
fpardecl_list (77)
    on left: 40 41, on right: 38 40
fparlist (78)
    on left: 42 43, on right: 40 41 42
fpar_addinfo (79)
    on left: 44, on right: 42 43
statements (80)
    on left: 45 46 47, on right: 1 2 33 34 35 45 47 95 96 97 98 100
    101 102 103 104 105 106
expression (81)
    on left: 48 49, on right: 12 13 48 71 75 85 93 94 95 96 97 100
    101 102 103 104 105 106
andexp (82)
    on left: 50 51, on right: 48 49 50
relexp (83)
    on left: 52 53, on right: 50 51
rel_op (84)
    on left: 54 55 56 57 58 59, on right: 52
aritexp (85)
    on left: 60 61 62, on right: 52 53 60 61
term (86)
    on left: 63 64 65 66, on right: 60 61 62 63 64 65
factor (87)
    on left: 67 68 69 70, on right: 63 64 65 66
primary (88)
    on left: 71 72 73 74 75, on right: 67 68 69 70
checkIdentifier (89)
    on left: 76, on right: 74 94 111
literal (90)
    on left: 77 78, on right: 73
funccall (91)
    on left: 79, on right: 72
proccall (92)
    on left: 80, on right: 89
actualpar (93)
    on left: 81 82, on right: 79 80
parameters_list (94)
    on left: 83 84, on right: 81 83
parameter (95)
    on left: 85, on right: 83 84 112
statement (96)
    on left: 86 87 88 89 90 91 92 93, on right: 45 47
assignment (97)
    on left: 94, on right: 86 103 105 106
conditional (98)
    on left: 95 96, on right: 87
elseif_opt_list (99)
    on left: 97 98 99 100, on right: 95 96 97 100
repetition (100)
    on left: 101 102 103 104 105 106, on right: 88
io_statement (101)
    on left: 107 108 109 110 111, on right: 90
io_parameter (102)
    on left: 112 113, on right: 107 110


State 0

    0 $accept: . module $end

    TOKEN_TYPE_MODULE  shift, and go to state 1

    module  go to state 2


State 1

    1 module: TOKEN_TYPE_MODULE . module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE . module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 3

    module_create_scope  go to state 4


State 2

    0 $accept: module . $end

    $end  shift, and go to state 5


State 3

    3 module_create_scope: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 3 (module_create_scope)


State 4

    1 module: TOKEN_TYPE_MODULE module_create_scope . TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope . TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope

    TOKEN_TYPE_SEMICOLON  shift, and go to state 6


State 5

    0 $accept: module $end .

    $default  accept


State 6

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON . declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON . declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope

    TOKEN_TYPE_CONST  shift, and go to state 7
    TOKEN_TYPE_VAR    shift, and go to state 8

    $default  reduce using rule 24 (procdecl_list)

    declarations   go to state 9
    constdecl      go to state 10
    vardecl        go to state 11
    procdecl_list  go to state 12


State 7

    9 constdecl: TOKEN_TYPE_CONST . constdecl_list

    $default  reduce using rule 11 (constdecl_list)

    constdecl_list  go to state 13


State 8

   15 vardecl: TOKEN_TYPE_VAR . vardecl_list

    $default  reduce using rule 17 (vardecl_list)

    vardecl_list  go to state 14


State 9

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations . TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations . TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope

    TOKEN_TYPE_BEGIN  shift, and go to state 15


State 10

    5 declarations: constdecl . vardecl procdecl_list
    6             | constdecl . procdecl_list

    TOKEN_TYPE_VAR  shift, and go to state 8

    $default  reduce using rule 24 (procdecl_list)

    vardecl        go to state 16
    procdecl_list  go to state 17


State 11

    7 declarations: vardecl . procdecl_list

    $default  reduce using rule 24 (procdecl_list)

    procdecl_list  go to state 18


State 12

    8 declarations: procdecl_list .
   23 procdecl_list: procdecl_list . procdecl

    TOKEN_TYPE_PROCEDURE  shift, and go to state 19
    TOKEN_TYPE_FUNCTION   shift, and go to state 20

    $default  reduce using rule 8 (declarations)

    procdecl    go to state 21
    procheader  go to state 22


State 13

    9 constdecl: TOKEN_TYPE_CONST constdecl_list .
   10 constdecl_list: constdecl_list . constlist TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 9 (constdecl)

    constlist      go to state 24
    const_addinfo  go to state 25


State 14

   15 vardecl: TOKEN_TYPE_VAR vardecl_list .
   16 vardecl_list: vardecl_list . varlist TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 26

    $default  reduce using rule 15 (vardecl)

    varlist      go to state 27
    var_addinfo  go to state 28


State 15

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN . statements TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN . statements TOKEN_TYPE_END module_remove_scope

    $default  reduce using rule 46 (statements)

    statements  go to state 29


State 16

    5 declarations: constdecl vardecl . procdecl_list

    $default  reduce using rule 24 (procdecl_list)

    procdecl_list  go to state 30


State 17

    6 declarations: constdecl procdecl_list .
   23 procdecl_list: procdecl_list . procdecl

    TOKEN_TYPE_PROCEDURE  shift, and go to state 19
    TOKEN_TYPE_FUNCTION   shift, and go to state 20

    $default  reduce using rule 6 (declarations)

    procdecl    go to state 21
    procheader  go to state 22


State 18

    7 declarations: vardecl procdecl_list .
   23 procdecl_list: procdecl_list . procdecl

    TOKEN_TYPE_PROCEDURE  shift, and go to state 19
    TOKEN_TYPE_FUNCTION   shift, and go to state 20

    $default  reduce using rule 7 (declarations)

    procdecl    go to state 21
    procheader  go to state 22


State 19

   26 procheader: TOKEN_TYPE_PROCEDURE . procheader_create_scope formalpars TOKEN_TYPE_SEMICOLON
   28           | TOKEN_TYPE_PROCEDURE . procheader_create_scope formalpars

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 31

    procheader_create_scope  go to state 32


State 20

   27 procheader: TOKEN_TYPE_FUNCTION . funcheader_create_scope formalpars TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   29           | TOKEN_TYPE_FUNCTION . funcheader_create_scope formalpars TOKEN_TYPE_COLON datatype
   30           | TOKEN_TYPE_FUNCTION . funcheader_create_scope formalpars TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 33

    funcheader_create_scope  go to state 34


State 21

   23 procdecl_list: procdecl_list procdecl .

    $default  reduce using rule 23 (procdecl_list)


State 22

   25 procdecl: procheader . procbody

    TOKEN_TYPE_VAR    shift, and go to state 8
    TOKEN_TYPE_BEGIN  shift, and go to state 35

    vardecl   go to state 36
    procbody  go to state 37


State 23

   14 const_addinfo: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 14 (const_addinfo)


State 24

   10 constdecl_list: constdecl_list constlist . TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   12 constlist: constlist . TOKEN_TYPE_COMMA const_addinfo TOKEN_TYPE_ASSIGN expression

    TOKEN_TYPE_COLON  shift, and go to state 38
    TOKEN_TYPE_COMMA  shift, and go to state 39


State 25

   13 constlist: const_addinfo . TOKEN_TYPE_ASSIGN expression

    TOKEN_TYPE_ASSIGN  shift, and go to state 40


State 26

   20 var_addinfo: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 20 (var_addinfo)


State 27

   16 vardecl_list: vardecl_list varlist . TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   18 varlist: varlist . TOKEN_TYPE_COMMA var_addinfo

    TOKEN_TYPE_COLON  shift, and go to state 41
    TOKEN_TYPE_COMMA  shift, and go to state 42


State 28

   19 varlist: var_addinfo .

    $default  reduce using rule 19 (varlist)


State 29

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements . TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements . TOKEN_TYPE_END module_remove_scope
   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 44
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 30

    5 declarations: constdecl vardecl procdecl_list .
   23 procdecl_list: procdecl_list . procdecl

    TOKEN_TYPE_PROCEDURE  shift, and go to state 19
    TOKEN_TYPE_FUNCTION   shift, and go to state 20

    $default  reduce using rule 5 (declarations)

    procdecl    go to state 21
    procheader  go to state 22


State 31

   31 procheader_create_scope: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 31 (procheader_create_scope)


State 32

   26 procheader: TOKEN_TYPE_PROCEDURE procheader_create_scope . formalpars TOKEN_TYPE_SEMICOLON
   28           | TOKEN_TYPE_PROCEDURE procheader_create_scope . formalpars

    TOKEN_TYPE_LEFT_BRACKET  shift, and go to state 62

    formalpars  go to state 63


State 33

   32 funcheader_create_scope: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 32 (funcheader_create_scope)


State 34

   27 procheader: TOKEN_TYPE_FUNCTION funcheader_create_scope . formalpars TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   29           | TOKEN_TYPE_FUNCTION funcheader_create_scope . formalpars TOKEN_TYPE_COLON datatype
   30           | TOKEN_TYPE_FUNCTION funcheader_create_scope . formalpars TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_LEFT_BRACKET  shift, and go to state 62

    formalpars  go to state 64


State 35

   34 procbody: TOKEN_TYPE_BEGIN . statements TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON
   35         | TOKEN_TYPE_BEGIN . statements TOKEN_TYPE_END procbody_remove_scope

    $default  reduce using rule 46 (statements)

    statements  go to state 65


State 36

   33 procbody: vardecl . TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_BEGIN  shift, and go to state 66


State 37

   25 procdecl: procheader procbody .

    $default  reduce using rule 25 (procdecl)


State 38

   10 constdecl_list: constdecl_list constlist TOKEN_TYPE_COLON . datatype TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_BOOLEAN  shift, and go to state 67
    TOKEN_TYPE_INTEGER  shift, and go to state 68

    datatype  go to state 69


State 39

   12 constlist: constlist TOKEN_TYPE_COMMA . const_addinfo TOKEN_TYPE_ASSIGN expression

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 23

    const_addinfo  go to state 70


State 40

   13 constlist: const_addinfo TOKEN_TYPE_ASSIGN . expression

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 78
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 41

   16 vardecl_list: vardecl_list varlist TOKEN_TYPE_COLON . datatype TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_BOOLEAN  shift, and go to state 67
    TOKEN_TYPE_INTEGER  shift, and go to state 68

    datatype  go to state 88


State 42

   18 varlist: varlist TOKEN_TYPE_COMMA . var_addinfo

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 26

    var_addinfo  go to state 89


State 43

   76 checkIdentifier: TOKEN_TYPE_IDENTIFIER .
   80 proccall: TOKEN_TYPE_IDENTIFIER . actualpar

    TOKEN_TYPE_LEFT_BRACKET  shift, and go to state 90

    $default  reduce using rule 76 (checkIdentifier)

    actualpar  go to state 91


State 44

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END . module_remove_scope TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END . module_remove_scope

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 92

    module_remove_scope  go to state 93


State 45

   95 conditional: TOKEN_TYPE_IF . expression TOKEN_TYPE_THEN statements elseif_opt_list TOKEN_TYPE_END
   96            | TOKEN_TYPE_IF . expression statements elseif_opt_list TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 94
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 46

  101 repetition: TOKEN_TYPE_WHILE . expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  104           | TOKEN_TYPE_WHILE . expression statements TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 95
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 47

  102 repetition: TOKEN_TYPE_REPEAT . statements TOKEN_TYPE_UNTIL expression

    $default  reduce using rule 46 (statements)

    statements  go to state 96


State 48

  103 repetition: TOKEN_TYPE_FOR . assignment TOKEN_TYPE_TO expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  105           | TOKEN_TYPE_FOR . assignment expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  106           | TOKEN_TYPE_FOR . assignment TOKEN_TYPE_TO expression statements TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 97

    checkIdentifier  go to state 55
    assignment       go to state 98


State 49

   91 statement: TOKEN_TYPE_CONTINUE .

    $default  reduce using rule 91 (statement)


State 50

   92 statement: TOKEN_TYPE_BREAK .

    $default  reduce using rule 92 (statement)


State 51

   93 statement: TOKEN_TYPE_RETURN . expression

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 99
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 52

  107 io_statement: TOKEN_TYPE_WRITE . TOKEN_TYPE_LEFT_BRACKET io_parameter TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_LEFT_BRACKET  shift, and go to state 100


State 53

  108 io_statement: TOKEN_TYPE_WRITELN .
  109             | TOKEN_TYPE_WRITELN . TOKEN_TYPE_LEFT_BRACKET TOKEN_TYPE_RIGHT_BRACKET
  110             | TOKEN_TYPE_WRITELN . TOKEN_TYPE_LEFT_BRACKET io_parameter TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_LEFT_BRACKET  shift, and go to state 101

    $default  reduce using rule 108 (io_statement)


State 54

  111 io_statement: TOKEN_TYPE_READ . TOKEN_TYPE_LEFT_BRACKET checkIdentifier TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_LEFT_BRACKET  shift, and go to state 102


State 55

   94 assignment: checkIdentifier . TOKEN_TYPE_ASSIGN expression

    TOKEN_TYPE_ASSIGN  shift, and go to state 103


State 56

   89 statement: proccall .

    $default  reduce using rule 89 (statement)


State 57

   45 statements: statements statement . TOKEN_TYPE_SEMICOLON
   47           | statements statement .

    TOKEN_TYPE_SEMICOLON  shift, and go to state 104

    $default  reduce using rule 47 (statements)


State 58

   86 statement: assignment .

    $default  reduce using rule 86 (statement)


State 59

   87 statement: conditional .

    $default  reduce using rule 87 (statement)


State 60

   88 statement: repetition .

    $default  reduce using rule 88 (statement)


State 61

   90 statement: io_statement .

    $default  reduce using rule 90 (statement)


State 62

   37 formalpars: TOKEN_TYPE_LEFT_BRACKET . fpardecl_opt_list TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 105

    $default  reduce using rule 39 (fpardecl_opt_list)

    fpardecl_opt_list  go to state 106
    fpardecl_list      go to state 107
    fparlist           go to state 108
    fpar_addinfo       go to state 109


State 63

   26 procheader: TOKEN_TYPE_PROCEDURE procheader_create_scope formalpars . TOKEN_TYPE_SEMICOLON
   28           | TOKEN_TYPE_PROCEDURE procheader_create_scope formalpars .

    TOKEN_TYPE_SEMICOLON  shift, and go to state 110

    $default  reduce using rule 28 (procheader)


State 64

   27 procheader: TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars . TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON
   29           | TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars . TOKEN_TYPE_COLON datatype
   30           | TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars . TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_COLON      shift, and go to state 111
    TOKEN_TYPE_SEMICOLON  shift, and go to state 112


State 65

   34 procbody: TOKEN_TYPE_BEGIN statements . TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON
   35         | TOKEN_TYPE_BEGIN statements . TOKEN_TYPE_END procbody_remove_scope
   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 113
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 66

   33 procbody: vardecl TOKEN_TYPE_BEGIN . statements TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON

    $default  reduce using rule 46 (statements)

    statements  go to state 114


State 67

   21 datatype: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 21 (datatype)


State 68

   22 datatype: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 22 (datatype)


State 69

   10 constdecl_list: constdecl_list constlist TOKEN_TYPE_COLON datatype . TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_SEMICOLON  shift, and go to state 115


State 70

   12 constlist: constlist TOKEN_TYPE_COMMA const_addinfo . TOKEN_TYPE_ASSIGN expression

    TOKEN_TYPE_ASSIGN  shift, and go to state 116


State 71

   76 checkIdentifier: TOKEN_TYPE_IDENTIFIER .
   79 funccall: TOKEN_TYPE_IDENTIFIER . actualpar

    TOKEN_TYPE_LEFT_BRACKET  shift, and go to state 90

    TOKEN_TYPE_LEFT_BRACKET  [reduce using rule 76 (checkIdentifier)]
    $default                 reduce using rule 76 (checkIdentifier)

    actualpar  go to state 117


State 72

   77 literal: TOKEN_TYPE_BOOLEAN_LITERAL .

    $default  reduce using rule 77 (literal)


State 73

   78 literal: TOKEN_TYPE_INTEGER_LITERAL .

    $default  reduce using rule 78 (literal)


State 74

   69 factor: TOKEN_TYPE_NOT . primary

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75

    primary          go to state 118
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 75

   71 primary: TOKEN_TYPE_LEFT_BRACKET . expression TOKEN_TYPE_RIGHT_BRACKET
   75        | TOKEN_TYPE_LEFT_BRACKET . expression

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 119
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 76

   67 factor: TOKEN_TYPE_PLUS . primary

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75

    primary          go to state 120
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 77

   68 factor: TOKEN_TYPE_MINUS . primary

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75

    primary          go to state 121
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 78

   13 constlist: const_addinfo TOKEN_TYPE_ASSIGN expression .
   48 expression: expression . TOKEN_TYPE_OR andexp

    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 13 (constlist)


State 79

   49 expression: andexp .
   50 andexp: andexp . TOKEN_TYPE_AND relexp

    TOKEN_TYPE_AND  shift, and go to state 123

    TOKEN_TYPE_AND  [reduce using rule 49 (expression)]
    $default        reduce using rule 49 (expression)


State 80

   51 andexp: relexp .

    $default  reduce using rule 51 (andexp)


State 81

   52 relexp: aritexp . rel_op aritexp
   53       | aritexp .
   60 aritexp: aritexp . TOKEN_TYPE_PLUS term
   61        | aritexp . TOKEN_TYPE_MINUS term

    TOKEN_TYPE_LESS           shift, and go to state 124
    TOKEN_TYPE_LESS_EQUAL     shift, and go to state 125
    TOKEN_TYPE_EQUAL          shift, and go to state 126
    TOKEN_TYPE_NOT_EQUAL      shift, and go to state 127
    TOKEN_TYPE_GREATER        shift, and go to state 128
    TOKEN_TYPE_GREATER_EQUAL  shift, and go to state 129
    TOKEN_TYPE_PLUS           shift, and go to state 130
    TOKEN_TYPE_MINUS          shift, and go to state 131

    TOKEN_TYPE_LESS           [reduce using rule 53 (relexp)]
    TOKEN_TYPE_LESS_EQUAL     [reduce using rule 53 (relexp)]
    TOKEN_TYPE_EQUAL          [reduce using rule 53 (relexp)]
    TOKEN_TYPE_NOT_EQUAL      [reduce using rule 53 (relexp)]
    TOKEN_TYPE_GREATER        [reduce using rule 53 (relexp)]
    TOKEN_TYPE_GREATER_EQUAL  [reduce using rule 53 (relexp)]
    TOKEN_TYPE_PLUS           [reduce using rule 53 (relexp)]
    TOKEN_TYPE_MINUS          [reduce using rule 53 (relexp)]
    $default                  reduce using rule 53 (relexp)

    rel_op  go to state 132


State 82

   62 aritexp: term .
   63 term: term . TOKEN_TYPE_ASTERISK factor
   64     | term . TOKEN_TYPE_SLASH factor
   65     | term . TOKEN_TYPE_MOD factor

    TOKEN_TYPE_ASTERISK  shift, and go to state 133
    TOKEN_TYPE_MOD       shift, and go to state 134
    TOKEN_TYPE_SLASH     shift, and go to state 135

    TOKEN_TYPE_ASTERISK  [reduce using rule 62 (aritexp)]
    TOKEN_TYPE_MOD       [reduce using rule 62 (aritexp)]
    TOKEN_TYPE_SLASH     [reduce using rule 62 (aritexp)]
    $default             reduce using rule 62 (aritexp)


State 83

   66 term: factor .

    $default  reduce using rule 66 (term)


State 84

   70 factor: primary .

    $default  reduce using rule 70 (factor)


State 85

   74 primary: checkIdentifier .

    $default  reduce using rule 74 (primary)


State 86

   73 primary: literal .

    $default  reduce using rule 73 (primary)


State 87

   72 primary: funccall .

    $default  reduce using rule 72 (primary)


State 88

   16 vardecl_list: vardecl_list varlist TOKEN_TYPE_COLON datatype . TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_SEMICOLON  shift, and go to state 136


State 89

   18 varlist: varlist TOKEN_TYPE_COMMA var_addinfo .

    $default  reduce using rule 18 (varlist)


State 90

   81 actualpar: TOKEN_TYPE_LEFT_BRACKET . parameters_list TOKEN_TYPE_RIGHT_BRACKET
   82          | TOKEN_TYPE_LEFT_BRACKET . TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_RIGHT_BRACKET    shift, and go to state 137
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 138
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87
    parameters_list  go to state 139
    parameter        go to state 140


State 91

   80 proccall: TOKEN_TYPE_IDENTIFIER actualpar .

    $default  reduce using rule 80 (proccall)


State 92

    4 module_remove_scope: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 4 (module_remove_scope)


State 93

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope . TOKEN_TYPE_FULL_STOP
    2       | TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope .

    TOKEN_TYPE_FULL_STOP  shift, and go to state 141

    $default  reduce using rule 2 (module)


State 94

   48 expression: expression . TOKEN_TYPE_OR andexp
   95 conditional: TOKEN_TYPE_IF expression . TOKEN_TYPE_THEN statements elseif_opt_list TOKEN_TYPE_END
   96            | TOKEN_TYPE_IF expression . statements elseif_opt_list TOKEN_TYPE_END

    TOKEN_TYPE_THEN  shift, and go to state 142
    TOKEN_TYPE_OR    shift, and go to state 122

    $default  reduce using rule 46 (statements)

    statements  go to state 143


State 95

   48 expression: expression . TOKEN_TYPE_OR andexp
  101 repetition: TOKEN_TYPE_WHILE expression . TOKEN_TYPE_DO statements TOKEN_TYPE_END
  104           | TOKEN_TYPE_WHILE expression . statements TOKEN_TYPE_END

    TOKEN_TYPE_DO  shift, and go to state 144
    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 46 (statements)

    statements  go to state 145


State 96

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
  102 repetition: TOKEN_TYPE_REPEAT statements . TOKEN_TYPE_UNTIL expression

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_UNTIL       shift, and go to state 146
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 97

   76 checkIdentifier: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 76 (checkIdentifier)


State 98

  103 repetition: TOKEN_TYPE_FOR assignment . TOKEN_TYPE_TO expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  105           | TOKEN_TYPE_FOR assignment . expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  106           | TOKEN_TYPE_FOR assignment . TOKEN_TYPE_TO expression statements TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_TO               shift, and go to state 147
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 148
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 99

   48 expression: expression . TOKEN_TYPE_OR andexp
   93 statement: TOKEN_TYPE_RETURN expression .

    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 93 (statement)


State 100

  107 io_statement: TOKEN_TYPE_WRITE TOKEN_TYPE_LEFT_BRACKET . io_parameter TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_STRING_LITERAL   shift, and go to state 149
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 138
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87
    parameter        go to state 150
    io_parameter     go to state 151


State 101

  109 io_statement: TOKEN_TYPE_WRITELN TOKEN_TYPE_LEFT_BRACKET . TOKEN_TYPE_RIGHT_BRACKET
  110             | TOKEN_TYPE_WRITELN TOKEN_TYPE_LEFT_BRACKET . io_parameter TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_STRING_LITERAL   shift, and go to state 149
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_RIGHT_BRACKET    shift, and go to state 152
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 138
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87
    parameter        go to state 150
    io_parameter     go to state 153


State 102

  111 io_statement: TOKEN_TYPE_READ TOKEN_TYPE_LEFT_BRACKET . checkIdentifier TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 97

    checkIdentifier  go to state 154


State 103

   94 assignment: checkIdentifier TOKEN_TYPE_ASSIGN . expression

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 155
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 104

   45 statements: statements statement TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 45 (statements)


State 105

   44 fpar_addinfo: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 44 (fpar_addinfo)


State 106

   37 formalpars: TOKEN_TYPE_LEFT_BRACKET fpardecl_opt_list . TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_RIGHT_BRACKET  shift, and go to state 156


State 107

   38 fpardecl_opt_list: fpardecl_list .
   40 fpardecl_list: fpardecl_list . TOKEN_TYPE_SEMICOLON fparlist TOKEN_TYPE_COLON datatype

    TOKEN_TYPE_SEMICOLON  shift, and go to state 157

    $default  reduce using rule 38 (fpardecl_opt_list)


State 108

   41 fpardecl_list: fparlist . TOKEN_TYPE_COLON datatype
   42 fparlist: fparlist . TOKEN_TYPE_COMMA fpar_addinfo

    TOKEN_TYPE_COLON  shift, and go to state 158
    TOKEN_TYPE_COMMA  shift, and go to state 159


State 109

   43 fparlist: fpar_addinfo .

    $default  reduce using rule 43 (fparlist)


State 110

   26 procheader: TOKEN_TYPE_PROCEDURE procheader_create_scope formalpars TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 26 (procheader)


State 111

   27 procheader: TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_COLON . datatype TOKEN_TYPE_SEMICOLON
   29           | TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_COLON . datatype

    TOKEN_TYPE_BOOLEAN  shift, and go to state 67
    TOKEN_TYPE_INTEGER  shift, and go to state 68

    datatype  go to state 160


State 112

   30 procheader: TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 30 (procheader)


State 113

   34 procbody: TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END . procbody_remove_scope TOKEN_TYPE_SEMICOLON
   35         | TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END . procbody_remove_scope

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 161

    procbody_remove_scope  go to state 162


State 114

   33 procbody: vardecl TOKEN_TYPE_BEGIN statements . TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON
   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 163
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 115

   10 constdecl_list: constdecl_list constlist TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 10 (constdecl_list)


State 116

   12 constlist: constlist TOKEN_TYPE_COMMA const_addinfo TOKEN_TYPE_ASSIGN . expression

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 164
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 117

   79 funccall: TOKEN_TYPE_IDENTIFIER actualpar .

    $default  reduce using rule 79 (funccall)


State 118

   69 factor: TOKEN_TYPE_NOT primary .

    $default  reduce using rule 69 (factor)


State 119

   48 expression: expression . TOKEN_TYPE_OR andexp
   71 primary: TOKEN_TYPE_LEFT_BRACKET expression . TOKEN_TYPE_RIGHT_BRACKET
   75        | TOKEN_TYPE_LEFT_BRACKET expression .

    TOKEN_TYPE_OR             shift, and go to state 122
    TOKEN_TYPE_RIGHT_BRACKET  shift, and go to state 165

    TOKEN_TYPE_OR             [reduce using rule 75 (primary)]
    TOKEN_TYPE_RIGHT_BRACKET  [reduce using rule 75 (primary)]
    $default                  reduce using rule 75 (primary)


State 120

   67 factor: TOKEN_TYPE_PLUS primary .

    $default  reduce using rule 67 (factor)


State 121

   68 factor: TOKEN_TYPE_MINUS primary .

    $default  reduce using rule 68 (factor)


State 122

   48 expression: expression TOKEN_TYPE_OR . andexp

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    andexp           go to state 166
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 123

   50 andexp: andexp TOKEN_TYPE_AND . relexp

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    relexp           go to state 167
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 124

   55 rel_op: TOKEN_TYPE_LESS .

    $default  reduce using rule 55 (rel_op)


State 125

   57 rel_op: TOKEN_TYPE_LESS_EQUAL .

    $default  reduce using rule 57 (rel_op)


State 126

   58 rel_op: TOKEN_TYPE_EQUAL .

    $default  reduce using rule 58 (rel_op)


State 127

   59 rel_op: TOKEN_TYPE_NOT_EQUAL .

    $default  reduce using rule 59 (rel_op)


State 128

   54 rel_op: TOKEN_TYPE_GREATER .

    $default  reduce using rule 54 (rel_op)


State 129

   56 rel_op: TOKEN_TYPE_GREATER_EQUAL .

    $default  reduce using rule 56 (rel_op)


State 130

   60 aritexp: aritexp TOKEN_TYPE_PLUS . term

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    term             go to state 168
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 131

   61 aritexp: aritexp TOKEN_TYPE_MINUS . term

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    term             go to state 169
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 132

   52 relexp: aritexp rel_op . aritexp

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    aritexp          go to state 170
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 133

   63 term: term TOKEN_TYPE_ASTERISK . factor

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    factor           go to state 171
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 134

   65 term: term TOKEN_TYPE_MOD . factor

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    factor           go to state 172
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 135

   64 term: term TOKEN_TYPE_SLASH . factor

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    factor           go to state 173
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 136

   16 vardecl_list: vardecl_list varlist TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 16 (vardecl_list)


State 137

   82 actualpar: TOKEN_TYPE_LEFT_BRACKET TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 82 (actualpar)


State 138

   48 expression: expression . TOKEN_TYPE_OR andexp
   85 parameter: expression .

    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 85 (parameter)


State 139

   81 actualpar: TOKEN_TYPE_LEFT_BRACKET parameters_list . TOKEN_TYPE_RIGHT_BRACKET
   83 parameters_list: parameters_list . TOKEN_TYPE_COMMA parameter

    TOKEN_TYPE_COMMA          shift, and go to state 174
    TOKEN_TYPE_RIGHT_BRACKET  shift, and go to state 175


State 140

   84 parameters_list: parameter .

    $default  reduce using rule 84 (parameters_list)


State 141

    1 module: TOKEN_TYPE_MODULE module_create_scope TOKEN_TYPE_SEMICOLON declarations TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END module_remove_scope TOKEN_TYPE_FULL_STOP .

    $default  reduce using rule 1 (module)


State 142

   95 conditional: TOKEN_TYPE_IF expression TOKEN_TYPE_THEN . statements elseif_opt_list TOKEN_TYPE_END

    $default  reduce using rule 46 (statements)

    statements  go to state 176


State 143

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
   96 conditional: TOKEN_TYPE_IF expression statements . elseif_opt_list TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_ELSIF       shift, and go to state 177
    TOKEN_TYPE_ELSE        shift, and go to state 178
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    $default  reduce using rule 99 (elseif_opt_list)

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    elseif_opt_list  go to state 179
    repetition       go to state 60
    io_statement     go to state 61


State 144

  101 repetition: TOKEN_TYPE_WHILE expression TOKEN_TYPE_DO . statements TOKEN_TYPE_END

    $default  reduce using rule 46 (statements)

    statements  go to state 180


State 145

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
  104 repetition: TOKEN_TYPE_WHILE expression statements . TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 181
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 146

  102 repetition: TOKEN_TYPE_REPEAT statements TOKEN_TYPE_UNTIL . expression

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 182
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 147

  103 repetition: TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO . expression TOKEN_TYPE_DO statements TOKEN_TYPE_END
  106           | TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO . expression statements TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 183
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 148

   48 expression: expression . TOKEN_TYPE_OR andexp
  105 repetition: TOKEN_TYPE_FOR assignment expression . TOKEN_TYPE_DO statements TOKEN_TYPE_END

    TOKEN_TYPE_DO  shift, and go to state 184
    TOKEN_TYPE_OR  shift, and go to state 122


State 149

  113 io_parameter: TOKEN_TYPE_STRING_LITERAL .

    $default  reduce using rule 113 (io_parameter)


State 150

  112 io_parameter: parameter .

    $default  reduce using rule 112 (io_parameter)


State 151

  107 io_statement: TOKEN_TYPE_WRITE TOKEN_TYPE_LEFT_BRACKET io_parameter . TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_RIGHT_BRACKET  shift, and go to state 185


State 152

  109 io_statement: TOKEN_TYPE_WRITELN TOKEN_TYPE_LEFT_BRACKET TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 109 (io_statement)


State 153

  110 io_statement: TOKEN_TYPE_WRITELN TOKEN_TYPE_LEFT_BRACKET io_parameter . TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_RIGHT_BRACKET  shift, and go to state 186


State 154

  111 io_statement: TOKEN_TYPE_READ TOKEN_TYPE_LEFT_BRACKET checkIdentifier . TOKEN_TYPE_RIGHT_BRACKET

    TOKEN_TYPE_RIGHT_BRACKET  shift, and go to state 187


State 155

   48 expression: expression . TOKEN_TYPE_OR andexp
   94 assignment: checkIdentifier TOKEN_TYPE_ASSIGN expression .

    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 94 (assignment)


State 156

   37 formalpars: TOKEN_TYPE_LEFT_BRACKET fpardecl_opt_list TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 37 (formalpars)


State 157

   40 fpardecl_list: fpardecl_list TOKEN_TYPE_SEMICOLON . fparlist TOKEN_TYPE_COLON datatype

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 105

    fparlist      go to state 188
    fpar_addinfo  go to state 109


State 158

   41 fpardecl_list: fparlist TOKEN_TYPE_COLON . datatype

    TOKEN_TYPE_BOOLEAN  shift, and go to state 67
    TOKEN_TYPE_INTEGER  shift, and go to state 68

    datatype  go to state 189


State 159

   42 fparlist: fparlist TOKEN_TYPE_COMMA . fpar_addinfo

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 105

    fpar_addinfo  go to state 190


State 160

   27 procheader: TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_COLON datatype . TOKEN_TYPE_SEMICOLON
   29           | TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_COLON datatype .

    TOKEN_TYPE_SEMICOLON  shift, and go to state 191

    $default  reduce using rule 29 (procheader)


State 161

   36 procbody_remove_scope: TOKEN_TYPE_IDENTIFIER .

    $default  reduce using rule 36 (procbody_remove_scope)


State 162

   34 procbody: TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope . TOKEN_TYPE_SEMICOLON
   35         | TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope .

    TOKEN_TYPE_SEMICOLON  shift, and go to state 192

    $default  reduce using rule 35 (procbody)


State 163

   33 procbody: vardecl TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END . procbody_remove_scope TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 161

    procbody_remove_scope  go to state 193


State 164

   12 constlist: constlist TOKEN_TYPE_COMMA const_addinfo TOKEN_TYPE_ASSIGN expression .
   48 expression: expression . TOKEN_TYPE_OR andexp

    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 12 (constlist)


State 165

   71 primary: TOKEN_TYPE_LEFT_BRACKET expression TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 71 (primary)


State 166

   48 expression: expression TOKEN_TYPE_OR andexp .
   50 andexp: andexp . TOKEN_TYPE_AND relexp

    TOKEN_TYPE_AND  shift, and go to state 123

    TOKEN_TYPE_AND  [reduce using rule 48 (expression)]
    $default        reduce using rule 48 (expression)


State 167

   50 andexp: andexp TOKEN_TYPE_AND relexp .

    $default  reduce using rule 50 (andexp)


State 168

   60 aritexp: aritexp TOKEN_TYPE_PLUS term .
   63 term: term . TOKEN_TYPE_ASTERISK factor
   64     | term . TOKEN_TYPE_SLASH factor
   65     | term . TOKEN_TYPE_MOD factor

    TOKEN_TYPE_ASTERISK  shift, and go to state 133
    TOKEN_TYPE_MOD       shift, and go to state 134
    TOKEN_TYPE_SLASH     shift, and go to state 135

    TOKEN_TYPE_ASTERISK  [reduce using rule 60 (aritexp)]
    TOKEN_TYPE_MOD       [reduce using rule 60 (aritexp)]
    TOKEN_TYPE_SLASH     [reduce using rule 60 (aritexp)]
    $default             reduce using rule 60 (aritexp)


State 169

   61 aritexp: aritexp TOKEN_TYPE_MINUS term .
   63 term: term . TOKEN_TYPE_ASTERISK factor
   64     | term . TOKEN_TYPE_SLASH factor
   65     | term . TOKEN_TYPE_MOD factor

    TOKEN_TYPE_ASTERISK  shift, and go to state 133
    TOKEN_TYPE_MOD       shift, and go to state 134
    TOKEN_TYPE_SLASH     shift, and go to state 135

    TOKEN_TYPE_ASTERISK  [reduce using rule 61 (aritexp)]
    TOKEN_TYPE_MOD       [reduce using rule 61 (aritexp)]
    TOKEN_TYPE_SLASH     [reduce using rule 61 (aritexp)]
    $default             reduce using rule 61 (aritexp)


State 170

   52 relexp: aritexp rel_op aritexp .
   60 aritexp: aritexp . TOKEN_TYPE_PLUS term
   61        | aritexp . TOKEN_TYPE_MINUS term

    TOKEN_TYPE_PLUS   shift, and go to state 130
    TOKEN_TYPE_MINUS  shift, and go to state 131

    TOKEN_TYPE_PLUS   [reduce using rule 52 (relexp)]
    TOKEN_TYPE_MINUS  [reduce using rule 52 (relexp)]
    $default          reduce using rule 52 (relexp)


State 171

   63 term: term TOKEN_TYPE_ASTERISK factor .

    $default  reduce using rule 63 (term)


State 172

   65 term: term TOKEN_TYPE_MOD factor .

    $default  reduce using rule 65 (term)


State 173

   64 term: term TOKEN_TYPE_SLASH factor .

    $default  reduce using rule 64 (term)


State 174

   83 parameters_list: parameters_list TOKEN_TYPE_COMMA . parameter

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 138
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87
    parameter        go to state 194


State 175

   81 actualpar: TOKEN_TYPE_LEFT_BRACKET parameters_list TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 81 (actualpar)


State 176

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
   95 conditional: TOKEN_TYPE_IF expression TOKEN_TYPE_THEN statements . elseif_opt_list TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_ELSIF       shift, and go to state 177
    TOKEN_TYPE_ELSE        shift, and go to state 178
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    $default  reduce using rule 99 (elseif_opt_list)

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    elseif_opt_list  go to state 195
    repetition       go to state 60
    io_statement     go to state 61


State 177

   97 elseif_opt_list: TOKEN_TYPE_ELSIF . expression TOKEN_TYPE_THEN statements elseif_opt_list
  100                | TOKEN_TYPE_ELSIF . expression statements elseif_opt_list

    TOKEN_TYPE_IDENTIFIER       shift, and go to state 71
    TOKEN_TYPE_BOOLEAN_LITERAL  shift, and go to state 72
    TOKEN_TYPE_INTEGER_LITERAL  shift, and go to state 73
    TOKEN_TYPE_NOT              shift, and go to state 74
    TOKEN_TYPE_LEFT_BRACKET     shift, and go to state 75
    TOKEN_TYPE_PLUS             shift, and go to state 76
    TOKEN_TYPE_MINUS            shift, and go to state 77

    expression       go to state 196
    andexp           go to state 79
    relexp           go to state 80
    aritexp          go to state 81
    term             go to state 82
    factor           go to state 83
    primary          go to state 84
    checkIdentifier  go to state 85
    literal          go to state 86
    funccall         go to state 87


State 178

   98 elseif_opt_list: TOKEN_TYPE_ELSE . statements

    $default  reduce using rule 46 (statements)

    statements  go to state 197


State 179

   96 conditional: TOKEN_TYPE_IF expression statements elseif_opt_list . TOKEN_TYPE_END

    TOKEN_TYPE_END  shift, and go to state 198


State 180

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
  101 repetition: TOKEN_TYPE_WHILE expression TOKEN_TYPE_DO statements . TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 199
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 181

  104 repetition: TOKEN_TYPE_WHILE expression statements TOKEN_TYPE_END .

    $default  reduce using rule 104 (repetition)


State 182

   48 expression: expression . TOKEN_TYPE_OR andexp
  102 repetition: TOKEN_TYPE_REPEAT statements TOKEN_TYPE_UNTIL expression .

    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 102 (repetition)


State 183

   48 expression: expression . TOKEN_TYPE_OR andexp
  103 repetition: TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression . TOKEN_TYPE_DO statements TOKEN_TYPE_END
  106           | TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression . statements TOKEN_TYPE_END

    TOKEN_TYPE_DO  shift, and go to state 200
    TOKEN_TYPE_OR  shift, and go to state 122

    $default  reduce using rule 46 (statements)

    statements  go to state 201


State 184

  105 repetition: TOKEN_TYPE_FOR assignment expression TOKEN_TYPE_DO . statements TOKEN_TYPE_END

    $default  reduce using rule 46 (statements)

    statements  go to state 202


State 185

  107 io_statement: TOKEN_TYPE_WRITE TOKEN_TYPE_LEFT_BRACKET io_parameter TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 107 (io_statement)


State 186

  110 io_statement: TOKEN_TYPE_WRITELN TOKEN_TYPE_LEFT_BRACKET io_parameter TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 110 (io_statement)


State 187

  111 io_statement: TOKEN_TYPE_READ TOKEN_TYPE_LEFT_BRACKET checkIdentifier TOKEN_TYPE_RIGHT_BRACKET .

    $default  reduce using rule 111 (io_statement)


State 188

   40 fpardecl_list: fpardecl_list TOKEN_TYPE_SEMICOLON fparlist . TOKEN_TYPE_COLON datatype
   42 fparlist: fparlist . TOKEN_TYPE_COMMA fpar_addinfo

    TOKEN_TYPE_COLON  shift, and go to state 203
    TOKEN_TYPE_COMMA  shift, and go to state 159


State 189

   41 fpardecl_list: fparlist TOKEN_TYPE_COLON datatype .

    $default  reduce using rule 41 (fpardecl_list)


State 190

   42 fparlist: fparlist TOKEN_TYPE_COMMA fpar_addinfo .

    $default  reduce using rule 42 (fparlist)


State 191

   27 procheader: TOKEN_TYPE_FUNCTION funcheader_create_scope formalpars TOKEN_TYPE_COLON datatype TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 27 (procheader)


State 192

   34 procbody: TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 34 (procbody)


State 193

   33 procbody: vardecl TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope . TOKEN_TYPE_SEMICOLON

    TOKEN_TYPE_SEMICOLON  shift, and go to state 204


State 194

   83 parameters_list: parameters_list TOKEN_TYPE_COMMA parameter .

    $default  reduce using rule 83 (parameters_list)


State 195

   95 conditional: TOKEN_TYPE_IF expression TOKEN_TYPE_THEN statements elseif_opt_list . TOKEN_TYPE_END

    TOKEN_TYPE_END  shift, and go to state 205


State 196

   48 expression: expression . TOKEN_TYPE_OR andexp
   97 elseif_opt_list: TOKEN_TYPE_ELSIF expression . TOKEN_TYPE_THEN statements elseif_opt_list
  100                | TOKEN_TYPE_ELSIF expression . statements elseif_opt_list

    TOKEN_TYPE_THEN  shift, and go to state 206
    TOKEN_TYPE_OR    shift, and go to state 122

    $default  reduce using rule 46 (statements)

    statements  go to state 207


State 197

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
   98 elseif_opt_list: TOKEN_TYPE_ELSE statements .

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    $default  reduce using rule 98 (elseif_opt_list)

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 198

   96 conditional: TOKEN_TYPE_IF expression statements elseif_opt_list TOKEN_TYPE_END .

    $default  reduce using rule 96 (conditional)


State 199

  101 repetition: TOKEN_TYPE_WHILE expression TOKEN_TYPE_DO statements TOKEN_TYPE_END .

    $default  reduce using rule 101 (repetition)


State 200

  103 repetition: TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression TOKEN_TYPE_DO . statements TOKEN_TYPE_END

    $default  reduce using rule 46 (statements)

    statements  go to state 208


State 201

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
  106 repetition: TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression statements . TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 209
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 202

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
  105 repetition: TOKEN_TYPE_FOR assignment expression TOKEN_TYPE_DO statements . TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 210
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 203

   40 fpardecl_list: fpardecl_list TOKEN_TYPE_SEMICOLON fparlist TOKEN_TYPE_COLON . datatype

    TOKEN_TYPE_BOOLEAN  shift, and go to state 67
    TOKEN_TYPE_INTEGER  shift, and go to state 68

    datatype  go to state 211


State 204

   33 procbody: vardecl TOKEN_TYPE_BEGIN statements TOKEN_TYPE_END procbody_remove_scope TOKEN_TYPE_SEMICOLON .

    $default  reduce using rule 33 (procbody)


State 205

   95 conditional: TOKEN_TYPE_IF expression TOKEN_TYPE_THEN statements elseif_opt_list TOKEN_TYPE_END .

    $default  reduce using rule 95 (conditional)


State 206

   97 elseif_opt_list: TOKEN_TYPE_ELSIF expression TOKEN_TYPE_THEN . statements elseif_opt_list

    $default  reduce using rule 46 (statements)

    statements  go to state 212


State 207

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
  100 elseif_opt_list: TOKEN_TYPE_ELSIF expression statements . elseif_opt_list

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_ELSIF       shift, and go to state 177
    TOKEN_TYPE_ELSE        shift, and go to state 178
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    $default  reduce using rule 99 (elseif_opt_list)

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    elseif_opt_list  go to state 213
    repetition       go to state 60
    io_statement     go to state 61


State 208

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
  103 repetition: TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression TOKEN_TYPE_DO statements . TOKEN_TYPE_END

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_END         shift, and go to state 214
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    repetition       go to state 60
    io_statement     go to state 61


State 209

  106 repetition: TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression statements TOKEN_TYPE_END .

    $default  reduce using rule 106 (repetition)


State 210

  105 repetition: TOKEN_TYPE_FOR assignment expression TOKEN_TYPE_DO statements TOKEN_TYPE_END .

    $default  reduce using rule 105 (repetition)


State 211

   40 fpardecl_list: fpardecl_list TOKEN_TYPE_SEMICOLON fparlist TOKEN_TYPE_COLON datatype .

    $default  reduce using rule 40 (fpardecl_list)


State 212

   45 statements: statements . statement TOKEN_TYPE_SEMICOLON
   47           | statements . statement
   97 elseif_opt_list: TOKEN_TYPE_ELSIF expression TOKEN_TYPE_THEN statements . elseif_opt_list

    TOKEN_TYPE_IDENTIFIER  shift, and go to state 43
    TOKEN_TYPE_IF          shift, and go to state 45
    TOKEN_TYPE_ELSIF       shift, and go to state 177
    TOKEN_TYPE_ELSE        shift, and go to state 178
    TOKEN_TYPE_WHILE       shift, and go to state 46
    TOKEN_TYPE_REPEAT      shift, and go to state 47
    TOKEN_TYPE_FOR         shift, and go to state 48
    TOKEN_TYPE_CONTINUE    shift, and go to state 49
    TOKEN_TYPE_BREAK       shift, and go to state 50
    TOKEN_TYPE_RETURN      shift, and go to state 51
    TOKEN_TYPE_WRITE       shift, and go to state 52
    TOKEN_TYPE_WRITELN     shift, and go to state 53
    TOKEN_TYPE_READ        shift, and go to state 54

    $default  reduce using rule 99 (elseif_opt_list)

    checkIdentifier  go to state 55
    proccall         go to state 56
    statement        go to state 57
    assignment       go to state 58
    conditional      go to state 59
    elseif_opt_list  go to state 215
    repetition       go to state 60
    io_statement     go to state 61


State 213

  100 elseif_opt_list: TOKEN_TYPE_ELSIF expression statements elseif_opt_list .

    $default  reduce using rule 100 (elseif_opt_list)


State 214

  103 repetition: TOKEN_TYPE_FOR assignment TOKEN_TYPE_TO expression TOKEN_TYPE_DO statements TOKEN_TYPE_END .

    $default  reduce using rule 103 (repetition)


State 215

   97 elseif_opt_list: TOKEN_TYPE_ELSIF expression TOKEN_TYPE_THEN statements elseif_opt_list .

    $default  reduce using rule 97 (elseif_opt_list)
